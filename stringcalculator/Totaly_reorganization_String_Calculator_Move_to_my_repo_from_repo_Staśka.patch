Index: src/main/java/StringCalculator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/StringCalculator.java	(date 1532181753000)
+++ src/main/java/StringCalculator.java	(date 1532208672833)
@@ -1,5 +1,9 @@
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.List;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
 
 /**
  * Created by szypows_local on 21.07.2018.
@@ -49,33 +53,34 @@
 
     public int Sum(String input) {
 
+
+        String[] numbers = getValues(input);
+
         if (input.equals(""))
             return 0;
         else if (input.length() >= 3) {
-      /*      if (input.charAt(0) == '/' && input.charAt(1) == '/') {
-                separator = input.charAt(2);
-                isSeparator = true;
-                //"//[aaa]\\n1aaa2aaa3"
-            }*/
-            for (String s : getSeparator(input)) {
-                separatortab += s + "|";
-            }
-            String[] tab = input.split(",|\n|" + separatortab);
-            System.out.println(Arrays.toString(tab));
-            return sumString(getSeparator(input), tab);
+            return sumNumbers(numbers);
         } else {
             return Integer.parseInt(input);
         }
     }
 
-    public int sumString(ArrayList<String> separators, String[] input) {
+    private int sumNumbers(String[] inputText) {
+        int sum = 0;
+        for (int i = 0; i < inputText.length; i++) {
+            sum += Integer.parseInt(inputText[i]);
+        }
+        System.out.println("suma " + sum);
+        return sum;
+    }
+
+    /*public int sumString(char separators, String[] input) {
         int sum = 0;
 
 
         if (isSeparator) {
             start = 2;
         }
-
         for (int i = start; i < input.length; i++) {
             if (!checkNegatives(input, start)) {
                 if (input[i] != String.valueOf(separator) && input[i] != "\n" && Integer.parseInt(input[i]) < 1000)
@@ -83,7 +88,7 @@
             }
         }
         return sum;
-    }
+    }*/
 
     public boolean checkNegatives(String[] tab, int begin) {
 
@@ -103,10 +108,11 @@
 
     }
 
-    public ArrayList<String> getSeparator(String stringInput) {
+    /*public String getSeparator(String stringInput) {
+
         String[] tab = stringInput.split("");
-        String separator = "";
-        ArrayList<String> separators = new ArrayList<String>();
+        //String separator = "";
+        *//*ArrayList<String> separators = new ArrayList<String>();
         if (tab[0] == "/" && tab[1] == "/" && tab[2] != "[") {
             isSeparator = true;
             separators.add(tab[2]);
@@ -123,9 +129,29 @@
                 }
             }
 
+        }*//*
+        System.out.println(separator);
+        return separator;
+    }*/
+
+    public String[] getValues(String text) {
+        if (text.startsWith("//[")) {
+            Matcher m = Pattern.compile("//\\[(.*)\\]\n(.*)").matcher(text);
+            m.matches();
+            String separator = m.group(1);
+            String values = m.group(2);
+
+            return values.split(separator);
+        } else if (text.startsWith("//")) {
+            Matcher m = Pattern.compile("//(.*)\n(.*)").matcher(text);
+            m.matches();
+            String separator = m.group(1);
+            String values = m.group(2);
+            return values.split(separator);
+        } else {
+            String[] values = text.split(",|\n");
+            return values;
         }
-        System.out.println(separators);
-        return separators;
     }
 }
 
Index: src/test/java/StringCalculatorTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/StringCalculatorTest.java	(date 1532181753000)
+++ src/test/java/StringCalculatorTest.java	(date 1532205327820)
@@ -67,7 +67,7 @@
         String input = "//;\n1;2;-2;-5";
         expectedException.expect(IllegalArgumentException.class);
         expectedException.expectMessage("negatives not allowed: [-2, -5]");
-       calculator.Sum(input);
+        calculator.Sum(input);
     }
 
     @Test
